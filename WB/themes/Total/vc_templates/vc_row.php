<?php
// Display error for those using an outdated Visual Composer plugin
if ( ! function_exists( 'vcex_add_inner_row_margin' ) ) {
    echo '<p>'. __( 'The Visual Composer plugin must be updated for this module to work correctly.', 'wpex' ) .'</p>';
    return;
}

// Important: Do not edit this file, bad things will happen!
$atts = shortcode_atts( array(

    // Core
    'el_class'              => '',
    'bg_color'              => '',
    'bg_image'              => '',
    'bg_style'              => '',
    'bg_image_repeat'       => '',
    'padding'               => '',
    'font_color'            => '',
    'css'                   => '',
    'full_width'            => false,

    // Total Specific attributes
    'id'                    => '',
    'css_animation'         => '',
    'visibility'            => '',
    'tablet_fullwidth_cols' => '',
    'center_row'            => '',
    'min_height'            => '',
    'style'                 => '', // Legacy
    'border_color'          => '',
    'border_style'          => '',
    'border_width'          => '',
    'margin_top'            => '',
    'margin_bottom'         => '',
    'margin_left'           => '',
    'margin_right'          => '',
    'padding_top'           => '',
    'padding_bottom'        => '',
    'padding_left'          => '',
    'padding_right'         => '',
    'border'                => '',
    'video_bg'              => '',
    'video_bg_youtube'      => '',
    'video_bg_mp4'          => '',
    'video_bg_ogv'          => '',
    'video_bg_webm'         => '',
    'video_bg_overlay'      => '',
    'parallax'              => '',
    'parallax_bg'           => '',
    'parallax_speed'        => '',
    'parallax_direction'    => '',
    'parallax_style'        => '',
    'parallax_mobile'       => false,
    'column_spacing'        => '',
    'wrap_classes'          => '',

    // New Total atts that get parsed, so they need to be added last to the list

    'typography_style'      => '', // parse from $style
    'no_margins'            => '', // converts to $column_spacing 0px, no longer used

    // Helpers / Should NOT be added in the editor
    'bg_style_class'        => '',

), $atts );

// Parse attributes
$atts = vcex_parse_row_atts( $atts );

// Extract shortcode atts
extract( $atts );

// Load VC js
wp_enqueue_script( 'wpb_composer_front_js' );

// Remove background image paralllax background because it's added via a div.
if ( $parallax ) {
    $bg_image = false;
}

// Wrap classes
$wrap_classes = array( 'vc_row', 'wpb_row' );
if ( $css_animation ) {
    $wrap_classes[] = $this->getCSSAnimation( $css_animation );
}
if ( $visibility ) {
    $wrap_classes[] = $visibility;
}
if ( ! $parallax && $full_width && $bg_style_class ) {
    $wrap_classes[] = $bg_style_class;
}
if ( $column_spacing ) {
    $wrap_classes[] = 'column-spacing-'. $column_spacing;
}
if ( 'yes' == $tablet_fullwidth_cols ) {
    $wrap_classes[] = 'tablet-fullwidth-columns';
}
if ( $el_class ) {
    $wrap_classes[] = $this->getExtraClass( $el_class );
}
if ( $this->settings( 'base' ) === 'vc_row_inner' ) {
    $wrap_classes[] = 'vc_inner';
}
if ( $full_width == 'stretch_row_content_no_spaces' ) {
    $wrap_classes[] = 'vc_row-no-padding';
}
if ( $parallax && $full_width ) {
    $wrap_classes[] = 'has-parallax';
}
if ( $video_bg && $full_width ) {
    $wrap_classes[] = 'vcex-video-bg-wrap';
}
$wrap_classes = implode( ' ', $wrap_classes );

// Wrap data
$wrap_data = '';
if ( ! empty( $full_width ) ) {
    $wrap_data .= ' data-vc-full-width="true"';
}
if ( $full_width == 'stretch_row_content' || $full_width == 'stretch_row_content_no_spaces' ) {
    $wrap_data .= ' data-vc-stretch-content="true"';
}

// Outter Row Style
$wrap_style = array(
    'margin_top'    => $margin_top,
    'margin_bottom' => $margin_bottom,
    'margin_left'   => $margin_left,
    'margin_right'  => $margin_right,
);

// Inner Row Style
$inner_style = array(
    'min_height'        => $min_height,
    'background_image'  => $bg_image,
    'background_color'  => $bg_color,
    'border_color'      => $border_color,
    'border_style'      => $border_style,
    'border_width'      => $border_width,
    'padding_top'       => $padding_top,
    'padding_bottom'    => $padding_bottom,
    'padding_left'      => $padding_left,
    'padding_right'     => $padding_right,
);

// Full-width tweaks
if ( ! empty( $full_width ) ) {
    $wrap_style     = array_merge_recursive( $wrap_style, $inner_style );
    $inner_style    = false;
}

// Inner Classes
$inner_classes = array( 'clr' );
$inner_classes[] = get_row_css_class();
if ( $el_class ) {
    $inner_classes[] = $this->getExtraClass( $el_class );
}
if ( vcex_add_inner_row_margin( $atts ) && '0px' != $column_spacing ) {
    $inner_classes[] = 'compensate-vc-negative-margin';
} 
if ( $typography_style ) {
    $inner_classes[] = $typography_style;
}
if ( ! $full_width && $bg_style_class ) {
    $inner_classes[] = $bg_style_class;
}
if ( $visibility ) {
    $inner_classes[] = $visibility;
}
if ( $parallax && empty( $full_width ) ) {
    $inner_classes[] = 'has-parallax';
}
if ( $video_bg && empty( $full_width ) ) {
    $inner_classes[] = 'vcex-video-bg-wrap';
}
/*
// Row CSS param not used because of VC design bugs
if ( $css ) {
    $inner_classes[] = vc_shortcode_custom_css_class( $css, ' ' );
}*/
$inner_classes = implode( ' ', $inner_classes );
$inner_classes = apply_filters( VC_SHORTCODE_CUSTOM_CSS_FILTER_TAG, $inner_classes, $this->settings['base'], $atts );

// Row Output Start here
?>

<div class="<?php echo $wrap_classes; ?>"<?php vcex_unique_id( $id ); ?><?php echo $wrap_data;?><?php echo vcex_inline_style( $wrap_style ); ?>>
    <div class="<?php echo $inner_classes; ?>"<?php echo vcex_inline_style( $inner_style ); ?>>
        <?php
        // Center row open
        if ( $center_row ) { ?>
            <div class="container center-row clr"><div class="center-row-inner clr">
        <?php } ?>
            <?php
            // Row content
            echo wpb_js_remove_wpautop( $content ); ?>
        <?php
        // Center row close
        if ( $center_row ) echo '</div></div>'; ?>
        <?php
        // Inner parallax/video background
        if ( empty( $full_width ) ) : ?>
            <?php vcex_parallax_bg( $atts ); ?>
            <?php vcex_row_video( $atts ); ?>
        <?php endif; ?>
    </div><!-- .<?php echo $inner_classes; ?> -->
    <?php
    // Outer parallax/video background
    if ( ! empty( $full_width ) ) : ?>
        <?php vcex_parallax_bg( $atts ); ?>
        <?php vcex_row_video( $atts ); ?>
    <?php endif; ?>
</div><!-- .<?php echo $wrap_classes; ?> -->

<?php
// Strectch row container
if ( ! empty( $full_width ) ) echo '<div class="vc_row-full-width"></div>'; ?>